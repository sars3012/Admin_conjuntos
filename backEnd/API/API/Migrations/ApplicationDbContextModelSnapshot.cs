// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using adConjuntos2;

#nullable disable

namespace adConjuntos2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("adConjuntos2.Models.Conjunto", b =>
                {
                    b.Property<int>("conjuntoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("conjuntoId"));

                    b.Property<string>("direccion_conjunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_conjunto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("conjuntoId");

                    b.ToTable("Conjunto");
                });

            modelBuilder.Entity("adConjuntos2.Models.Rol", b =>
                {
                    b.Property<int>("rolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rolId"));

                    b.Property<string>("nombre_rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rolId");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("adConjuntos2.Models.Tarifa", b =>
                {
                    b.Property<int>("tarifaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tarifaId"));

                    b.Property<string>("tipo_tarifa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("valor_tarifa")
                        .HasColumnType("int");

                    b.Property<int>("viviendaId")
                        .HasColumnType("int");

                    b.HasKey("tarifaId");

                    b.HasIndex("viviendaId");

                    b.ToTable("Tarifa");
                });

            modelBuilder.Entity("adConjuntos2.Models.Usuario", b =>
                {
                    b.Property<int>("usuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuarioId"));

                    b.Property<string>("apellido1_usuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("apellido2_usuario")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("cedula_usuario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("email_usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("fechaNac_usuario")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre1_usuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("nombre2_usuario")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("telefono_usuario")
                        .HasColumnType("int");

                    b.Property<string>("tipDoc_usuario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("usuarioId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("adConjuntos2.Models.Usuario_rol", b =>
                {
                    b.Property<int>("usuarioRolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usuarioRolId"));

                    b.Property<int>("conjuntoId")
                        .HasColumnType("int");

                    b.Property<int>("rolId")
                        .HasColumnType("int");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("usuarioRolId");

                    b.HasIndex("conjuntoId");

                    b.HasIndex("rolId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Usuario_Rol");
                });

            modelBuilder.Entity("adConjuntos2.Models.Vivienda", b =>
                {
                    b.Property<int>("viviendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("viviendaId"));

                    b.Property<int>("conjuntoId")
                        .HasColumnType("int");

                    b.Property<int>("numero_vivienda")
                        .HasColumnType("int");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("viviendaId");

                    b.HasIndex("conjuntoId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Vivienda");
                });

            modelBuilder.Entity("adConjuntos2.Models.Tarifa", b =>
                {
                    b.HasOne("adConjuntos2.Models.Vivienda", "Vivienda")
                        .WithMany("Tarifa")
                        .HasForeignKey("viviendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vivienda");
                });

            modelBuilder.Entity("adConjuntos2.Models.Usuario_rol", b =>
                {
                    b.HasOne("adConjuntos2.Models.Conjunto", "Conjunto")
                        .WithMany("Usuario_Rol")
                        .HasForeignKey("conjuntoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adConjuntos2.Models.Rol", "Rol")
                        .WithMany("Usuario_rol")
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adConjuntos2.Models.Usuario", "Usuario")
                        .WithMany("Usuario_rol")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conjunto");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("adConjuntos2.Models.Vivienda", b =>
                {
                    b.HasOne("adConjuntos2.Models.Conjunto", "Conjunto")
                        .WithMany("Vivienda")
                        .HasForeignKey("conjuntoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adConjuntos2.Models.Usuario", "usuario")
                        .WithMany("Vivienda")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conjunto");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("adConjuntos2.Models.Conjunto", b =>
                {
                    b.Navigation("Usuario_Rol");

                    b.Navigation("Vivienda");
                });

            modelBuilder.Entity("adConjuntos2.Models.Rol", b =>
                {
                    b.Navigation("Usuario_rol");
                });

            modelBuilder.Entity("adConjuntos2.Models.Usuario", b =>
                {
                    b.Navigation("Usuario_rol");

                    b.Navigation("Vivienda");
                });

            modelBuilder.Entity("adConjuntos2.Models.Vivienda", b =>
                {
                    b.Navigation("Tarifa");
                });
#pragma warning restore 612, 618
        }
    }
}
